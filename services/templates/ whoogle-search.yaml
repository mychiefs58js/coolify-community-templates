# Should be 1.0.0 for new services
templateVersion: 1.0.0
# Default version of the service you would like to add. You can check it in the documentation.
# This is usually the docker image tag.
defaultVersion: latest
# Link to the official documentation. Shown on the UI.
documentation: https://github.com/benbusby/whoogle-search
# Lower case name of the application. Must be one word!
type: whoogle
# Fancy name of the application.
name: Whoogle Search
# Short description. Shown on the UI, when you create a new service.
description: A self-hosted, ad-free, privacy-respecting metasearch engine
# Other labels. This is searchable in the UI.
# If this is an alternative software to something else, must listed here for better discoverability.
labels:
  - search
  - google
## All the services needed. It is very similar to a docker-compose file!
services:
  # All services must start with $$id! $$id is the main service.
  # Other service examples: $$id-mysql, $$id-elasticsearch, etc.
  # $$id is replaced with the actual uuid during creation.
  $$id:
    # Name of the service. Should be fancy name. Shown on the UI.
    name: Whoogle Search
    # Startup command for this service.
    # command: server /data --console-address :9001
    # Official documentation for this service.
    documentation: Taken from https://github.com/benbusby/whoogle-search
    # If a service is depends on another service, should be listed like:
    # depends_on: ['$$id-mysql']
    depends_on: []
    # Docker image location. $$core_version will be replaced with the defaultVersion.
    image: benbusby/whoogle-search:$$core_version
    restart: unless-stopped
    pids_limit: 50
    mem_limit: 256mb
    memswap_limit: 256mb
    user: whoogle
    security_opt:
      - no-new-privileges
    cap_drop:
      - ALL
    tmpfs:
      - /config/:size=10M,uid=927,gid=927,mode=1700
      - /var/lib/tor/:size=15M,uid=927,gid=927,mode=1700
      - /run/tor/:size=1M,uid=927,gid=927,mode=1700
    # Volume definitions.
    # All volumes must start with $$id!
    # volumes:
    #   - $$id-data-write:/files

    # Required environment variables.
    # The second part (after =) must start with:
    ## - $$config -> if the data could be saved in text format to Coolify's database.
    ## - $$secret -> if the data needs to be encrypted before saved to Coolify's database.
    ## - $$config_coolify_fqdn_* -> you can define secondary (or any number of) fqdns to a service.
    ## This is useful if you need to expose more than one domains.
    ## This will shown on the UI in a separate input field.
    environment: # Uncomment to configure environment variables
      # Basic auth configuration, uncomment to enable
      - WHOOGLE_USER=$$config_whoogle_username
      - WHOOGLE_PASS=$$secret_whoogle_password

    # Ulimits configuration, the same as in docker-compose.
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    # You can define default configuration files before starting the container. This will be added to the container on start.

    # Ports that you need to set by Coolify's Proxy.
    ports:
      - "5000"
    # Advanced proxy configuration.
    proxy:
      # If only the port is defined, it means, it will be bound to the primary fqdn.
      - port: "5000"

variables:
  # You need to define all variables here.
  # id: must be variable name you defined in the `environment` part above.
  # name: the used environment variable name that will be configured in the docker configuration
  # label: fancy name of the variable
  # description: small description on what this variable is used for.
  # defaultValue: default value of the variable. Could be several things like:
  ## - empty -> ''
  ## - $$generate_fqdn -> primary fqdn will be set here.
  ## - $$generate_domain -> primary fqdn will be set here, but only the domain part. so if fqdn => `https://coolify.io`, domain will be `coolify.io`.
  ## - $$generate_username -> a username will be generated automatically.
  ## - $$generate_password -> a secure password will be generated automatically.
  ## - $$generate_hex -> generate random hex data with the length of 24 bytes.
  ## - $$generate_hex(Number) -> generate random bytes of hex data with the length of the Number you set.
  ## - $$generate_token -> generate a JWT token with your coolify instance's COOLIFY_SECRET_KEY value.
  ## - $$generate_network -> set the docker network you set for the service.
  # Optional options:
  # main: You can specify where to show the variable on the UI. Must match with one of the service names, like $$id or $$id_mysql, etc.
  # required: true | false -> Is the variable required or not. Required variables are required on the UI as well.
  # showOnConfiguration: $$secret values are not shown in the configuration by default, only in the secrets part. But it makes sense to show them sometimes, next to the configurations, like for default password for the default user, so you don't need to go to the secrets menu. It is a UX thing.
  # readOnly: true | false -> will be readonly in the UI.
  - id: $$config_whoogle_username
    name: WHOOGLE_USER
    label: Whooogle User
    defaultValue: $$generate_username
    description: ""
  - id: $$secret_whoogle_password
    name: WHOOGLE_PASSWORD
    label: Whooogle password
    defaultValue: $$generate_password
    description: ""
